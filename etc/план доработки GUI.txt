План доработки GUI сервиса для интеграции с препроцессром
---------------------------------------------------------

1) В редакторе IDE в диалоговом окне, открывающемся при нажатии кнопки 
   «Настроить конфигурацию запуска», после поля «Опции» добавить чекбокс

   "Использовать препроцессор шаблонов".
   
   Такой же чекбокс добавить на форму "Новая задача №"
	
2) На панель инструментов редактора IDE добавить кнопку
 
   "Компилировать". 

Как эти настройки будут влиять на работу системы Templet Web.

1) Опция "Использовать препроцессор шаблонов" отключена:

а) нажатие на кнопку "Компилировать" в IDE
-- файлы проекта загружаются в подключенное в окне «Настроить конфигурацию запуска» окружение,
   (предварительно в окружении создается каталог, как при запуске задачи)
-- запускается скрипт build.sh,
-- вывод скрипта направляется в окно IDE, расположенное под окнами редакторов кода;

б) нажатие на кнопку "Запустить" в IDE или запуск задачи через форму "Новая задача №"
-- запуск задачи выполняется без изменений, как реализовано в текущей версии.

2) Опция "Использовать препроцессор шаблонов" включена:   

а) нажатие на кнопку "Компилировать" в IDE
-- на стороне сервиса к каждому файлу с исходным кодом (*.cpp) применяется системный скрипт prebuild-design.sh,
-- перезагружается содержимое файлов, открытых в IDE, 
-- далее обработка выполняется как в 1)a);

б) нажатие на кнопку "Запустить" в IDE, запуск задачи через форму "Новая задача №",
-- на стороне сервиса к каждому файлу с исходным кодом (*.cpp) применяется системный скрипт prebuild-deploy.sh
   (в случае запуска через IDE, вывод prebuild-deploy.sh направляется в окно IDE, расположенное под окнами редакторов кода),
-- выполняется запуск задачи, как реализовано в текущей версии, 
-- на стороне сервиса к каждому файлу с исходным кодом (*.cpp) применяется системный скрипт prebuild-design.sh для отката
   результатов работы скрипта prebuild-deploy.sh.

Скрипты prebuild-deploy.sh и prebuild-design.sh содержат циклы для перебора файлов проекта и обработки их препроцессором, если необходимо.  
В скриптах prebuild-deploy.sh и prebuild-design.sh для каждого файла исходного кода (*.cpp) вызывается препроцессор командой вида skel -i file.cpp,
который выдаёт ключ первого по порядку блока templet-разметки или специальное значение NOMARKUP, если разметки не обнаружено.
На основе ключа блока определяется дальнейший алгоритм обработки файла исходного кода в скриптах, или, если препроцессор выдал NOMARKUP, файл пропускается.
 